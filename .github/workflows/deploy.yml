name: Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current commit SHA
        id: commit
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Generate Wrangler Configuration
        run: npm run types:config
        env:
          CLOUDFLARE_WORKER_NAME: ${{ secrets.CLOUDFLARE_WORKER_NAME }}
          CLOUDFLARE_DATABASE_NAME: ${{ secrets.CLOUDFLARE_DATABASE_NAME }}
          CLOUDFLARE_DOMAINS: ${{ secrets.CLOUDFLARE_DOMAINS }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
          COMMIT_SHA: ${{ steps.commit.outputs.sha }}
          FOR_DEPLOY: true

      - name: Generate Wrangler Types
        run: npm run types:wrangler

      - name: Generate Database Types
        run: npm run types:database

      - name: Build Database
        run: npm run build:database

      - name: Build Vite
        run: npm run build:vite

      - name: Build project
        run: npm run build

      - name: Deploy Database
        run: npm run deploy:database
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Deploy Secrets
        run: npm run deploy:secrets
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }},

      - name: Deploy Worker
        run: npm run deploy:files
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }},